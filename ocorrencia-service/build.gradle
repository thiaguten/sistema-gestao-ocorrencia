plugins {
	id 'org.springframework.boot' version '2.6.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'br.com.thiaguten.microservices'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

description = """\
Serviço de Ocorrência
----------------------------------------
Project version: ${version}
Gradle version: ${gradle.gradleVersion}
----------------------------------------
"""

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
	mavenCentral()
}

ext {
	set('springCloudVersion', "2021.0.1")
}

dependencies {
	implementation 'com.groupon:locality-uuid:1.1.1'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'org.keycloak:keycloak-admin-client:16.1.1'
	implementation 'com.github.ben-manes.caffeine:caffeine:3.0.6'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	// implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-sleuth-zipkin'
	implementation 'org.springframework.amqp:spring-rabbit'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
	runtimeOnly 'mysql:mysql-connector-java'
	//runtimeOnly 'com.h2database:h2'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootBuildImage') {
	imageName = "thiaguten/sgo-${project.name}:${project.version}"
	pullPolicy = 'IF_NOT_PRESENT'
	environment = [
		'PROFILE_CONFIG' : '',
		'SPRING_PROFILES_ACTIVE' : '',
		'SPRING_OUTPUT_ANSI_ENABLED' : 'ALWAYS',
		'TZ' : 'America/Sao_Paulo',
		'BPE_DELIM_JAVA_TOOL_OPTIONS' : ' ',
		'BPE_APPEND_JAVA_TOOL_OPTIONS' : '-Dlogging.level.br.com.thiaguten.microservices=ERROR -Dspring.jmx.enabled=false -Dfile.encoding=UTF-8'
	]
}
