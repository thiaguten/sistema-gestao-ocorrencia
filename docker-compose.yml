version: "3.9"
services:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    deploy:
      resources:
        limits:
          memory: 256M
    # restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - sgo-network
    healthcheck:
      # https://www.rabbitmq.com/monitoring.html#health-checks
      test: rabbitmq-diagnostics -q status
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  zipkin-server:
    image: openzipkin/zipkin:2.23
    container_name: zipkin-server
    deploy:
      resources:
        limits:
          memory: 256M
    # restart: always
    ports:
      - "9411:9411"
    environment:
      # https://github.com/openzipkin/zipkin/tree/master/zipkin-collector/rabbitmq
      - RABBIT_URI=amqp://guest:guest@rabbitmq:5672
    networks:
      - sgo-network
    depends_on:
      rabbitmq:
        condition: service_healthy

  sgo-naming-server:
    image: thiaguten/sgo-naming-server:0.0.1-SNAPSHOT
    container_name: sgo-naming-server
    ports:
      - "8761:8761"
    networks:
      - sgo-network

  sgo-localizacao-service:
    image: thiaguten/sgo-localizacao-service:0.0.1-SNAPSHOT
    container_name: sgo-localizacao-service
    ports:
      - "8000:8000"
    environment:
      - PROFILE_CONFIG=docker
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - sgo-network
    depends_on:
      - sgo-naming-server
      - rabbitmq

  sgo-ocorrencia-service:
    image: thiaguten/sgo-ocorrencia-service:0.0.1-SNAPSHOT
    container_name: sgo-ocorrencia-service
    ports:
      - "8200:8200"
    environment:
      - PROFILE_CONFIG=docker
      - SPRING_PROFILES_ACTIVE=docker
    networks:
      - sgo-network
    depends_on:
      sgo-mysql:
        condition: service_healthy
      sgo-naming-server:
        condition: service_started
      rabbitmq:
        condition: service_started

  sgo-mysql:
    image: mysql:5.7
    container_name: sgo-mysql
    # restart: always
    ports:
      - "3306:3306"
    volumes:
      - sgo_mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=db_sgo
      - MYSQL_USER=user_sgo
      - MYSQL_PASSWORD=Sg0p@SsWd
    networks:
      - sgo-network
    healthcheck:
      test: "mysql $$MYSQL_DATABASE -u$$MYSQL_USER -p$$MYSQL_PASSWORD -e 'SELECT 1;'"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

volumes:
  sgo_mysql_data:

networks:
  sgo-network: